# General {
	alias pingg='ping www.google.com'

	# When using sudo, use alias expansion (otherwise sudo ignores your aliases).
	alias sudo='sudo '

	# Change the default behavior of the following commands.
	alias make='make -j$[$(nproc)+1]'
	alias ls='ls --group-directories-first --color=auto'
	alias gdb_super='gdb --batch --ex run --ex bt --ex q --args'
# }

# Applications (quick launch) {
	alias p2='python2'
	alias p3='python3'
	alias ip2='ipython2'
	alias ip3='ipython3'
	alias yt='chromium --new-window --app=https://www.youtube.com'
	alias ytd='youtube-dl -x --audio-format mp3'
# }

# Personal {
	alias d='cd /media/data/'
	alias dot='cd $DOTFILES'
	alias aetos='ssh ktoumpid@aetos.it.teithe.gr'
	alias alarm='ssh alarm@alarmpi'
	#alias mysql='mysql -u root -D dbtech'

	# Easy clone git repos.
	clone() { git clone https://github.com/$1/$2 }
	# cloneaur() { git clone ssh://aur@aur4.archlinux.org/$1.git }
# }

# Pacman {
	if [ -f /var/log/pacman.log ]; then
		alias up='echo "The system was last updated on: "; cat .pacaur_lastupdate; pikaur -Syu; date > ~/.pacaur_lastupdate'
		alias orphansls='pacman -Qdt'
		alias orphansrm='sudo pacman -Rns $(pacman -Qtdq)'
		alias cacheclean='sudo pacman -Sc'
		alias fromaur='pacman -Qm'
	fi
# }

# Apt {
	if [ -d /var/log/apt/ ] || [ -f /var/log/apt.log ]; then
		alias up='sudo apt-get update && sudo apt-get upgrade'
	fi
# }

# Systemd {
	# End in the letter 'd' to avoid conflicts with zsh builtins such as enable.
	alias listd='find /etc/systemd/system -mindepth 1 -type d | xargs ls -l --color'

	# Append .service to service name if needed.
	filterservicename() { if echo $1 | grep ".service" 1>/dev/null; then echo $1; else echo $1.service; fi }

	statusd() { sudo systemctl status $(filterservicename $1); }
	startd() { sudo systemctl start $(filterservicename $1); }
	stopd() { sudo systemctl stop $(filterservicename $1); }
	restartd() { sudo systemctl restart $(filterservicename $1); }
	enabled() { sudo systemctl enable $(filterservicename $1); }
	disabled() { sudo systemctl disable $(filterservicename $1); }
	maskd() { sudo systemctl mask $(filterservicename $1); }
	unmaskd() { sudo systemctl unmask $(filterservicename $1); }

	listmasked() { systemctl list-unit-files | awk '$2 == "masked" {print $1}' }

	# Power control.
	alias s1='systemctl poweroff'
	alias s2='systemctl suspend'
	alias s3='systemctl reboot'

	# openvpn control
	alias startv='startd openvpn-client@tux-full-udp'
	alias stopv='stopd openvpn-client@tux-full-udp'
	alias teithevpn='cd $DOTFILES/vpn/teithe/ && sudo openvpn tux-full-udp.ovpn'
# }

# Qemu & other mounting data{
	#alias qemu-windose='qemu-system-x86_64 -enable-kvm -m 4096 -vga std -daemonize -drive file=/data/disk0/ksardas/VM/qemu/windows7.img,format=qcow2,if=virtio -net nic,model=virtio'
	alias aetos_mount='sshfs ktoumpid@aetos.it.teithe.gr:/home/student/x1314/ktoumpid /mnt/aetos'
	alias aetos_umount='fusermount -u /mnt/aetos'
	alias alarm_mount='sshfs alarm@alarmpi:/home/alarm /mnt/alarm'
	alias alarm_umount='fusermount -u /mnt/alarm'
	alias speedometer_ethernet='speedometer -t enp0s25 -r enp0s25'
	alias speedometer_wifi='speedometer -t wlp3s0 -r wlp3s0'
	alias mountiso="udisksctl loop-setup -r -f"
# }
